package statik

import (
	"github.com/rakyll/statik/fs"
)

func init() {
	data := "PK\x03\x04\x14\x00\x08\x00\x00\x00\xcdhKJ\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00	\x00\x00\x00script.js(function() {\n	'use strict'\n\n	// root element:\n	var httpfsx = document.querySelector('.httpfsx')\n\n	// file-system item nodes:\n	var items = httpfsx.querySelectorAll('.httpfsx .list .item')\n\n	// paths, that are listed on current page:\n	var existingPaths = []\n\n	for( var i = 0; i < items.length; i++ ) {\n\n		// item wrapper node:\n		var item = items[i]\n\n		var star = item.querySelector('.star') // starring element\n		var link = item.querySelector('.link') // link element (for item's path detection)\n\n		// item's path:\n		var path = link.getAttribute('href')\n\n		// what key is used for storing current item's starred state:\n		var starKey = 'httpfsx:star:' + path\n\n		// remember \"starring\" key to simplify \"toggle starring\" click handler:\n		star.setAttribute('data-httpfsx-star-key', starKey)\n\n		// change star's view, if item is starred:\n		if( localStorage.getItem(starKey) ) {\n			star.classList.add('active')\n		}\n\n		// remember this item's path to remove deleted items from localStorage down the code:\n		existingPaths.push(path.replace(/\\/{2,}|\\/$/g, ''))\n\n	}\n\n	// current request (location) path:\n	var currentPath = location.pathname.replace(/\\/{2,}|\\/$/g, '')\n\n	// traversing localStorage items to clean up deleted ones:\n	for( var key in localStorage ) {\n\n		// ignoring any foreign keys:\n		if( key.indexOf('httpfsx:') == -1 ) {\n			continue\n		}\n\n		// extracting stored item path from key:\n		var storedPath = key.replace(/httpfsx:[^:]+?:/, '')\n\n		// got item from other path, cannot touch it:\n		if( storedPath.indexOf(currentPath) != 0 ) {\n			continue\n		}\n\n		// does current localStorage item exists (not deleted)?\n		var exists = false\n\n		// checking, if current localStorage item is present on current location (page):\n		for( var i = 0; i < existingPaths.length; i++ ) {\n			var existingPath = existingPaths[i]\n			if( storedPath.indexOf(existingPath) == 0 ) {\n				exists = true\n				break\n			}\n		}\n\n		// removing deleted file-system items from localStorage:\n		if( !exists ) {\n			localStorage.removeItem(key)\n		}\n\n	}\n\n	// capturing \"star\" and \"clear-storage\" clicks:\n	httpfsx.addEventListener('click', function(event) {\n\n		if( event.target.classList.contains('star') ) {\n\n			var star = event.target\n\n			var starKey = star.getAttribute('data-httpfsx-star-key')\n\n			// toggle starring status:\n			if( localStorage.getItem(starKey) ) {\n				localStorage.removeItem(starKey)\n				star.classList.remove('active')\n			} else {\n				localStorage.setItem(starKey, 'T')\n				star.classList.add('active')\n			}\n\n		} else if( event.target.classList.contains('clear-storage') ) {\n\n			// confirm and clear localStorage:\n			if( confirm('Clear storage?') ) {\n\n				localStorage.clear()\n\n				// apply loosing stars to UI:\n				var stars = httpfsx.querySelectorAll('.star')\n				for( var i = 0; i < stars.length; i++ ) {\n					var star = stars[i]\n					star.classList.remove('active')\n				}\n\n				alert('Storage cleared')\n			}\n\n		}\n\n	})\n\n})()\nPK\x07\x08\xf8$\x1b\x86Z\x0b\x00\x00Z\x0b\x00\x00PK\x03\x04\x14\x00\x08\x00\x00\x00\xd5hKJ\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00	\x00\x00\x00style.css.httpfsx {\n	font-family: sans-serif;\n}\n\n.httpfsx a {\n	text-decoration: none;\n}\n\n.httpfsx .header {\n	margin: 0;\n	padding: 0.5cm 0;\n	font-size: 1cm;\n}\n\n.httpfsx .list {\n	margin: 0;\n	padding: 0;\n	list-style: none;\n}\n\n.httpfsx .list .item .star {\n	display: inline-block;\n	width: 1cm;\n	height: 1cm;\n	font-size: 1cm;\n	line-height: 1cm;\n	text-align: center;\n	vertical-align: middle;\n	color: #808080;\n}\n\n.httpfsx .list .item .star.active {\n	color: #8B0000;\n}\n\n.httpfsx .list .item .link {\n	display: inline-block;\n	width: calc(100% - 1cm - 0.5cm);\n	min-height: 1cm;\n	padding: 0;\n	vertical-align: top;\n}\n\n.httpfsx .list .item .link .name {\n	font-size: 0.5cm;\n	line-height: 0.6cm;\n	color: #101010;\n}\n\n.httpfsx .list .item .link .name::after {\n	color: #E0E0E0;\n}\n\n.httpfsx .list .item.dir .link .name::after {\n	content: \" \xf0\x9f\x93\x81\";\n}\n\n.httpfsx .list .item .link .meta {\n	display: block;\n	font-size: 0.3cm;\n	line-height: 0.6cm;\n	color: #808080;\n}\n\n.httpfsx .footer {\n	font-size: 0.3cm;\n	line-height: 0.3cm;\n	text-align: right;\n	padding-top: 1cm;\n}\n\n.httpfsx .footer .clear-storage {\n	color: #808080;\n}\nPK\x07\x08F\xdc\xd8\x07>\x04\x00\x00>\x04\x00\x00PK\x01\x02\x14\x03\x14\x00\x08\x00\x00\x00\xcdhKJ\xf8$\x1b\x86Z\x0b\x00\x00Z\x0b\x00\x00	\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xa4\x81\x00\x00\x00\x00script.jsPK\x01\x02\x14\x03\x14\x00\x08\x00\x00\x00\xd5hKJF\xdc\xd8\x07>\x04\x00\x00>\x04\x00\x00	\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xa4\x81\x91\x0b\x00\x00style.cssPK\x05\x06\x00\x00\x00\x00\x02\x00\x02\x00n\x00\x00\x00\x06\x10\x00\x00\x00\x00"
	fs.Register(data)
}
